services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    init: true
    volumes:
      - .:/app
      - pnpm-store:/pnpm-store
      - pnpm-global:/pnpm-global
      - /app/node_modules
      - .gitconfig:/home/node/.gitconfig:ro
      - vscode-extensions:/home/node/.vscode-server/extensions
    environment:
      - NODE_ENV=development
      - PNPM_HOME=/pnpm-global
      - PATH=/pnpm-global:$PATH
      - CI=true
      - COREPACK_ENABLE_DOWNLOAD_PROMPT=0
    user: node
    working_dir: /app
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    tty: true
    stdin_open: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 5s
      retries: 3

  db:
    build:
      context: ./db
    image: pgvector
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: recon_ai
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
  pnpm-store:
  pnpm-global:
  vscode-extensions: